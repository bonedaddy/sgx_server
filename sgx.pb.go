// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sgx.proto

package sgx_server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TODO: actually put in some relevant values into request
type Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type Challenge struct {
	SessionId            uint64   `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Challenge            []byte   `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Challenge) Reset()         { *m = Challenge{} }
func (m *Challenge) String() string { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()    {}
func (*Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{1}
}

func (m *Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Challenge.Unmarshal(m, b)
}
func (m *Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Challenge.Marshal(b, m, deterministic)
}
func (m *Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Challenge.Merge(m, src)
}
func (m *Challenge) XXX_Size() int {
	return xxx_messageInfo_Challenge.Size(m)
}
func (m *Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_Challenge proto.InternalMessageInfo

func (m *Challenge) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Challenge) GetChallenge() []byte {
	if m != nil {
		return m.Challenge
	}
	return nil
}

type Msg0 struct {
	SessionId            uint64   `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Exgid                uint32   `protobuf:"varint,2,opt,name=exgid,proto3" json:"exgid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg0) Reset()         { *m = Msg0{} }
func (m *Msg0) String() string { return proto.CompactTextString(m) }
func (*Msg0) ProtoMessage()    {}
func (*Msg0) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{2}
}

func (m *Msg0) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg0.Unmarshal(m, b)
}
func (m *Msg0) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg0.Marshal(b, m, deterministic)
}
func (m *Msg0) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg0.Merge(m, src)
}
func (m *Msg0) XXX_Size() int {
	return xxx_messageInfo_Msg0.Size(m)
}
func (m *Msg0) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg0.DiscardUnknown(m)
}

var xxx_messageInfo_Msg0 proto.InternalMessageInfo

func (m *Msg0) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Msg0) GetExgid() uint32 {
	if m != nil {
		return m.Exgid
	}
	return 0
}

type PublicKey struct {
	X                    []byte   `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    []byte   `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{3}
}

func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (m *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(m, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *PublicKey) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

// send msg0 and msg1 together, as per intel's suggestion
type Msg1 struct {
	SessionId            uint64     `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Msg0                 *Msg0      `protobuf:"bytes,2,opt,name=msg0,proto3" json:"msg0,omitempty"`
	Ga                   *PublicKey `protobuf:"bytes,3,opt,name=ga,proto3" json:"ga,omitempty"`
	Gid                  []byte     `protobuf:"bytes,4,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Msg1) Reset()         { *m = Msg1{} }
func (m *Msg1) String() string { return proto.CompactTextString(m) }
func (*Msg1) ProtoMessage()    {}
func (*Msg1) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{4}
}

func (m *Msg1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg1.Unmarshal(m, b)
}
func (m *Msg1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg1.Marshal(b, m, deterministic)
}
func (m *Msg1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg1.Merge(m, src)
}
func (m *Msg1) XXX_Size() int {
	return xxx_messageInfo_Msg1.Size(m)
}
func (m *Msg1) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg1.DiscardUnknown(m)
}

var xxx_messageInfo_Msg1 proto.InternalMessageInfo

func (m *Msg1) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Msg1) GetMsg0() *Msg0 {
	if m != nil {
		return m.Msg0
	}
	return nil
}

func (m *Msg1) GetGa() *PublicKey {
	if m != nil {
		return m.Ga
	}
	return nil
}

func (m *Msg1) GetGid() []byte {
	if m != nil {
		return m.Gid
	}
	return nil
}

type Signature struct {
	R                    []byte   `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	S                    []byte   `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{5}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Signature) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type A struct {
	Gb   *PublicKey `protobuf:"bytes,1,opt,name=gb,proto3" json:"gb,omitempty"`
	Spid []byte     `protobuf:"bytes,2,opt,name=spid,proto3" json:"spid,omitempty"`
	// quote_type and kdf_id are actually uint16_t,
	// but protobufs don't have such types, so keep as bytes
	QuoteType            []byte     `protobuf:"bytes,3,opt,name=quote_type,json=quoteType,proto3" json:"quote_type,omitempty"`
	KdfId                []byte     `protobuf:"bytes,4,opt,name=kdf_id,json=kdfId,proto3" json:"kdf_id,omitempty"`
	Signature            *Signature `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *A) Reset()         { *m = A{} }
func (m *A) String() string { return proto.CompactTextString(m) }
func (*A) ProtoMessage()    {}
func (*A) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{6}
}

func (m *A) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_A.Unmarshal(m, b)
}
func (m *A) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_A.Marshal(b, m, deterministic)
}
func (m *A) XXX_Merge(src proto.Message) {
	xxx_messageInfo_A.Merge(m, src)
}
func (m *A) XXX_Size() int {
	return xxx_messageInfo_A.Size(m)
}
func (m *A) XXX_DiscardUnknown() {
	xxx_messageInfo_A.DiscardUnknown(m)
}

var xxx_messageInfo_A proto.InternalMessageInfo

func (m *A) GetGb() *PublicKey {
	if m != nil {
		return m.Gb
	}
	return nil
}

func (m *A) GetSpid() []byte {
	if m != nil {
		return m.Spid
	}
	return nil
}

func (m *A) GetQuoteType() []byte {
	if m != nil {
		return m.QuoteType
	}
	return nil
}

func (m *A) GetKdfId() []byte {
	if m != nil {
		return m.KdfId
	}
	return nil
}

func (m *A) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Msg2 struct {
	A                    *A       `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	CmacA                []byte   `protobuf:"bytes,2,opt,name=cmac_a,json=cmacA,proto3" json:"cmac_a,omitempty"`
	SigRlSize            uint32   `protobuf:"varint,3,opt,name=sig_rl_size,json=sigRlSize,proto3" json:"sig_rl_size,omitempty"`
	SigRl                []byte   `protobuf:"bytes,4,opt,name=sig_rl,json=sigRl,proto3" json:"sig_rl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg2) Reset()         { *m = Msg2{} }
func (m *Msg2) String() string { return proto.CompactTextString(m) }
func (*Msg2) ProtoMessage()    {}
func (*Msg2) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{7}
}

func (m *Msg2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg2.Unmarshal(m, b)
}
func (m *Msg2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg2.Marshal(b, m, deterministic)
}
func (m *Msg2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg2.Merge(m, src)
}
func (m *Msg2) XXX_Size() int {
	return xxx_messageInfo_Msg2.Size(m)
}
func (m *Msg2) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg2.DiscardUnknown(m)
}

var xxx_messageInfo_Msg2 proto.InternalMessageInfo

func (m *Msg2) GetA() *A {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *Msg2) GetCmacA() []byte {
	if m != nil {
		return m.CmacA
	}
	return nil
}

func (m *Msg2) GetSigRlSize() uint32 {
	if m != nil {
		return m.SigRlSize
	}
	return 0
}

func (m *Msg2) GetSigRl() []byte {
	if m != nil {
		return m.SigRl
	}
	return nil
}

type M struct {
	Ga                   *PublicKey `protobuf:"bytes,1,opt,name=ga,proto3" json:"ga,omitempty"`
	PsSecurityProp       []byte     `protobuf:"bytes,2,opt,name=ps_security_prop,json=psSecurityProp,proto3" json:"ps_security_prop,omitempty"`
	Quote                []byte     `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *M) Reset()         { *m = M{} }
func (m *M) String() string { return proto.CompactTextString(m) }
func (*M) ProtoMessage()    {}
func (*M) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{8}
}

func (m *M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_M.Unmarshal(m, b)
}
func (m *M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_M.Marshal(b, m, deterministic)
}
func (m *M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_M.Merge(m, src)
}
func (m *M) XXX_Size() int {
	return xxx_messageInfo_M.Size(m)
}
func (m *M) XXX_DiscardUnknown() {
	xxx_messageInfo_M.DiscardUnknown(m)
}

var xxx_messageInfo_M proto.InternalMessageInfo

func (m *M) GetGa() *PublicKey {
	if m != nil {
		return m.Ga
	}
	return nil
}

func (m *M) GetPsSecurityProp() []byte {
	if m != nil {
		return m.PsSecurityProp
	}
	return nil
}

func (m *M) GetQuote() []byte {
	if m != nil {
		return m.Quote
	}
	return nil
}

type Msg3 struct {
	SessionId            uint64   `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CmacM                []byte   `protobuf:"bytes,2,opt,name=cmac_m,json=cmacM,proto3" json:"cmac_m,omitempty"`
	M                    *M       `protobuf:"bytes,3,opt,name=m,proto3" json:"m,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg3) Reset()         { *m = Msg3{} }
func (m *Msg3) String() string { return proto.CompactTextString(m) }
func (*Msg3) ProtoMessage()    {}
func (*Msg3) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{9}
}

func (m *Msg3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg3.Unmarshal(m, b)
}
func (m *Msg3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg3.Marshal(b, m, deterministic)
}
func (m *Msg3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg3.Merge(m, src)
}
func (m *Msg3) XXX_Size() int {
	return xxx_messageInfo_Msg3.Size(m)
}
func (m *Msg3) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg3.DiscardUnknown(m)
}

var xxx_messageInfo_Msg3 proto.InternalMessageInfo

func (m *Msg3) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Msg3) GetCmacM() []byte {
	if m != nil {
		return m.CmacM
	}
	return nil
}

func (m *Msg3) GetM() *M {
	if m != nil {
		return m.M
	}
	return nil
}

// TODO: figure out exactly what msg4 looks like
type Msg4 struct {
	EnclaveTrusted bool `protobuf:"varint,1,opt,name=enclave_trusted,json=enclaveTrusted,proto3" json:"enclave_trusted,omitempty"`
	PseTrusted     bool `protobuf:"varint,2,opt,name=pse_trusted,json=pseTrusted,proto3" json:"pse_trusted,omitempty"`
	// only sent on error
	Pib                  []byte   `protobuf:"bytes,3,opt,name=pib,proto3" json:"pib,omitempty"`
	Secret               []byte   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	Cmac                 []byte   `protobuf:"bytes,5,opt,name=cmac,proto3" json:"cmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg4) Reset()         { *m = Msg4{} }
func (m *Msg4) String() string { return proto.CompactTextString(m) }
func (*Msg4) ProtoMessage()    {}
func (*Msg4) Descriptor() ([]byte, []int) {
	return fileDescriptor_29e2d0ab30d804d4, []int{10}
}

func (m *Msg4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg4.Unmarshal(m, b)
}
func (m *Msg4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg4.Marshal(b, m, deterministic)
}
func (m *Msg4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg4.Merge(m, src)
}
func (m *Msg4) XXX_Size() int {
	return xxx_messageInfo_Msg4.Size(m)
}
func (m *Msg4) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg4.DiscardUnknown(m)
}

var xxx_messageInfo_Msg4 proto.InternalMessageInfo

func (m *Msg4) GetEnclaveTrusted() bool {
	if m != nil {
		return m.EnclaveTrusted
	}
	return false
}

func (m *Msg4) GetPseTrusted() bool {
	if m != nil {
		return m.PseTrusted
	}
	return false
}

func (m *Msg4) GetPib() []byte {
	if m != nil {
		return m.Pib
	}
	return nil
}

func (m *Msg4) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *Msg4) GetCmac() []byte {
	if m != nil {
		return m.Cmac
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "sgx_server.Request")
	proto.RegisterType((*Challenge)(nil), "sgx_server.Challenge")
	proto.RegisterType((*Msg0)(nil), "sgx_server.Msg0")
	proto.RegisterType((*PublicKey)(nil), "sgx_server.PublicKey")
	proto.RegisterType((*Msg1)(nil), "sgx_server.Msg1")
	proto.RegisterType((*Signature)(nil), "sgx_server.Signature")
	proto.RegisterType((*A)(nil), "sgx_server.A")
	proto.RegisterType((*Msg2)(nil), "sgx_server.Msg2")
	proto.RegisterType((*M)(nil), "sgx_server.M")
	proto.RegisterType((*Msg3)(nil), "sgx_server.Msg3")
	proto.RegisterType((*Msg4)(nil), "sgx_server.Msg4")
}

func init() { proto.RegisterFile("sgx.proto", fileDescriptor_29e2d0ab30d804d4) }

var fileDescriptor_29e2d0ab30d804d4 = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x3b, 0x6f, 0xdb, 0x30,
	0x10, 0xc7, 0x43, 0xbf, 0x1a, 0x9d, 0xe5, 0xd4, 0x60, 0x9b, 0xc2, 0x48, 0x5f, 0x01, 0xd1, 0x22,
	0x9e, 0x0c, 0xc7, 0xce, 0xd6, 0xa5, 0x46, 0x97, 0x06, 0x85, 0x81, 0x80, 0xce, 0xd2, 0x49, 0x90,
	0x25, 0x46, 0x55, 0x23, 0x4b, 0x34, 0x49, 0x05, 0x56, 0xe6, 0xce, 0xfd, 0x1e, 0x9d, 0xfb, 0x05,
	0x0b, 0x52, 0x94, 0x1f, 0x31, 0x50, 0x6f, 0xbc, 0xe3, 0x1d, 0xef, 0x77, 0x7f, 0x1e, 0x09, 0x8e,
	0x8c, 0x56, 0x03, 0x2e, 0x32, 0x95, 0x61, 0x90, 0xd1, 0xca, 0x93, 0x4c, 0x3c, 0x30, 0x41, 0x1c,
	0x78, 0x46, 0xd9, 0x32, 0x67, 0x52, 0x91, 0xaf, 0xe0, 0x7c, 0xf9, 0xe1, 0x27, 0x09, 0x4b, 0x23,
	0x86, 0xdf, 0x02, 0x48, 0x26, 0x65, 0x9c, 0xa5, 0x5e, 0x1c, 0xf6, 0xd0, 0x39, 0xea, 0x37, 0xa8,
	0x63, 0x3d, 0xd7, 0x21, 0x7e, 0x03, 0x4e, 0x50, 0xc5, 0xf6, 0x6a, 0xe7, 0xa8, 0xef, 0xd2, 0x8d,
	0x83, 0x7c, 0x82, 0xc6, 0x54, 0x46, 0xc3, 0x43, 0x87, 0xbc, 0x84, 0x26, 0x5b, 0x45, 0x71, 0x68,
	0x0e, 0xe8, 0xd0, 0xd2, 0x20, 0x17, 0xe0, 0xdc, 0xe4, 0xf3, 0x24, 0x0e, 0xbe, 0xb1, 0x02, 0xbb,
	0x80, 0x56, 0x26, 0xd1, 0xa5, 0x68, 0xa5, 0xad, 0xc2, 0x56, 0x43, 0x05, 0xf9, 0x85, 0x4c, 0x99,
	0xcb, 0x43, 0x65, 0x3e, 0x40, 0x63, 0x21, 0xa3, 0xa1, 0x49, 0x6c, 0x8f, 0xba, 0x83, 0x4d, 0xf7,
	0x03, 0x4d, 0x49, 0xcd, 0x2e, 0xfe, 0x08, 0xb5, 0xc8, 0xef, 0xd5, 0x4d, 0xcc, 0xe9, 0x76, 0xcc,
	0x1a, 0x86, 0xd6, 0x22, 0x1f, 0x77, 0xa1, 0xae, 0x89, 0x1b, 0x06, 0xa2, 0x6e, 0x79, 0x67, 0x71,
	0x94, 0xfa, 0x2a, 0x17, 0x4c, 0x13, 0x8a, 0x8a, 0x57, 0x68, 0x4b, 0x56, 0xbc, 0x92, 0xfc, 0x41,
	0x80, 0x26, 0xa6, 0xce, 0xdc, 0x84, 0xfc, 0xa7, 0xce, 0x1c, 0x63, 0x68, 0x48, 0x6e, 0xa5, 0x71,
	0xa9, 0x59, 0xeb, 0x3e, 0x97, 0x79, 0xa6, 0x98, 0xa7, 0x0a, 0xce, 0x0c, 0xaa, 0x4b, 0x1d, 0xe3,
	0xb9, 0x2d, 0x38, 0xc3, 0xa7, 0xd0, 0xba, 0x0f, 0xef, 0xbc, 0x35, 0x5d, 0xf3, 0x3e, 0xbc, 0xbb,
	0x0e, 0xf1, 0x18, 0x1c, 0x59, 0xf1, 0xf5, 0x9a, 0xfb, 0x75, 0xd7, 0xf0, 0x74, 0x13, 0x47, 0x96,
	0x46, 0xda, 0x11, 0x7e, 0x0d, 0xc8, 0xb7, 0xb0, 0x9d, 0xed, 0xa4, 0x09, 0x45, 0xbe, 0x2e, 0x18,
	0x2c, 0xfc, 0xc0, 0xf3, 0x2d, 0x65, 0x53, 0x5b, 0x13, 0xfc, 0x0e, 0xda, 0x32, 0x8e, 0x3c, 0x91,
	0x78, 0x32, 0x7e, 0x2c, 0x39, 0x3b, 0xe6, 0x6c, 0x9a, 0xcc, 0xe2, 0x47, 0xc3, 0x59, 0xee, 0x57,
	0x9c, 0x66, 0x8b, 0xfc, 0x04, 0x34, 0xb5, 0xb7, 0x80, 0x0e, 0xdd, 0x42, 0x1f, 0xba, 0x5c, 0x7a,
	0x92, 0x05, 0xb9, 0x88, 0x55, 0xe1, 0x71, 0x91, 0x71, 0xcb, 0x70, 0xc2, 0xe5, 0xcc, 0xba, 0x6f,
	0x44, 0xc6, 0xf5, 0x8c, 0x19, 0x85, 0xac, 0x5c, 0xa5, 0x41, 0xbe, 0x9b, 0xf6, 0xc6, 0x87, 0x26,
	0xa7, 0x6a, 0x70, 0xb1, 0xdd, 0xe0, 0x54, 0x8b, 0xb2, 0xb0, 0x93, 0xb2, 0x23, 0xca, 0x94, 0xa2,
	0x05, 0xf9, 0x5d, 0x4e, 0xe5, 0x15, 0xbe, 0x80, 0xe7, 0x2c, 0x0d, 0x12, 0xff, 0x81, 0x79, 0x4a,
	0xe4, 0x52, 0xb1, 0xb2, 0xc0, 0x31, 0x3d, 0xb1, 0xee, 0xdb, 0xd2, 0x8b, 0xdf, 0x43, 0x9b, 0xcb,
	0x4d, 0x50, 0xcd, 0x04, 0x01, 0x97, 0xeb, 0x80, 0x2e, 0xd4, 0x79, 0x3c, 0xb7, 0x1d, 0xe8, 0x25,
	0x7e, 0x05, 0x2d, 0xc9, 0x02, 0xc1, 0x94, 0x95, 0xd0, 0x5a, 0x7a, 0x6a, 0x34, 0xa2, 0xb9, 0x66,
	0x97, 0x9a, 0xf5, 0xe8, 0x2f, 0x82, 0xf6, 0x44, 0x29, 0x26, 0x95, 0xaf, 0xe2, 0x2c, 0xc5, 0x9f,
	0xa1, 0x3b, 0x53, 0xbe, 0x50, 0xdb, 0xbe, 0x17, 0xdb, 0x6d, 0xd8, 0xff, 0xe0, 0x6c, 0x47, 0xff,
	0xf5, 0xcf, 0x40, 0x8e, 0xf0, 0x10, 0x8e, 0x67, 0x2c, 0x0d, 0xcd, 0xdb, 0x7b, 0xfa, 0x9c, 0x2e,
	0xcf, 0x9e, 0x7a, 0x46, 0x3b, 0x19, 0xe3, 0xbd, 0x8c, 0xf1, 0x5e, 0xc6, 0x15, 0x39, 0x9a, 0xb7,
	0xcc, 0x57, 0x35, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x6f, 0xc3, 0x9e, 0x6e, 0xb7, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AttestationClient is the client API for Attestation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttestationClient interface {
	StartAttestation(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Challenge, error)
	SendMsg1(ctx context.Context, in *Msg1, opts ...grpc.CallOption) (*Msg2, error)
	SendMsg3(ctx context.Context, in *Msg3, opts ...grpc.CallOption) (*Msg4, error)
}

type attestationClient struct {
	cc *grpc.ClientConn
}

func NewAttestationClient(cc *grpc.ClientConn) AttestationClient {
	return &attestationClient{cc}
}

func (c *attestationClient) StartAttestation(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Challenge, error) {
	out := new(Challenge)
	err := c.cc.Invoke(ctx, "/sgx_server.Attestation/StartAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attestationClient) SendMsg1(ctx context.Context, in *Msg1, opts ...grpc.CallOption) (*Msg2, error) {
	out := new(Msg2)
	err := c.cc.Invoke(ctx, "/sgx_server.Attestation/SendMsg1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attestationClient) SendMsg3(ctx context.Context, in *Msg3, opts ...grpc.CallOption) (*Msg4, error) {
	out := new(Msg4)
	err := c.cc.Invoke(ctx, "/sgx_server.Attestation/SendMsg3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttestationServer is the server API for Attestation service.
type AttestationServer interface {
	StartAttestation(context.Context, *Request) (*Challenge, error)
	SendMsg1(context.Context, *Msg1) (*Msg2, error)
	SendMsg3(context.Context, *Msg3) (*Msg4, error)
}

// UnimplementedAttestationServer can be embedded to have forward compatible implementations.
type UnimplementedAttestationServer struct {
}

func (*UnimplementedAttestationServer) StartAttestation(ctx context.Context, req *Request) (*Challenge, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartAttestation not implemented")
}
func (*UnimplementedAttestationServer) SendMsg1(ctx context.Context, req *Msg1) (*Msg2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMsg1 not implemented")
}
func (*UnimplementedAttestationServer) SendMsg3(ctx context.Context, req *Msg3) (*Msg4, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMsg3 not implemented")
}

func RegisterAttestationServer(s *grpc.Server, srv AttestationServer) {
	s.RegisterService(&_Attestation_serviceDesc, srv)
}

func _Attestation_StartAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttestationServer).StartAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sgx_server.Attestation/StartAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttestationServer).StartAttestation(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Attestation_SendMsg1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttestationServer).SendMsg1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sgx_server.Attestation/SendMsg1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttestationServer).SendMsg1(ctx, req.(*Msg1))
	}
	return interceptor(ctx, in, info, handler)
}

func _Attestation_SendMsg3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttestationServer).SendMsg3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sgx_server.Attestation/SendMsg3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttestationServer).SendMsg3(ctx, req.(*Msg3))
	}
	return interceptor(ctx, in, info, handler)
}

var _Attestation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sgx_server.Attestation",
	HandlerType: (*AttestationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartAttestation",
			Handler:    _Attestation_StartAttestation_Handler,
		},
		{
			MethodName: "SendMsg1",
			Handler:    _Attestation_SendMsg1_Handler,
		},
		{
			MethodName: "SendMsg3",
			Handler:    _Attestation_SendMsg3_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sgx.proto",
}
